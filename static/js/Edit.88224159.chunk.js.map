{"version":3,"file":"static/js/Edit.88224159.chunk.js","mappings":"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","sources":["webpack://react-questionnaire/./src/pages/question/Edit/index.module.sass?aa20","webpack://react-questionnaire/./src/pages/question/Edit/components/Main/EditCanvas.module.sass?759e","components/DragSortable/SortableContainer.tsx","components/DragSortable/SortableItem.tsx","pages/question/Edit/components/Main/EditCanvas.tsx","webpack://react-questionnaire/./src/pages/question/Edit/components/Left/ComponentLib.module.sass?37af","pages/question/Edit/components/Left/ComponentLib.tsx","webpack://react-questionnaire/./src/pages/question/Edit/components/Left/Layers.module.sass?e98a","pages/question/Edit/components/Left/Layers.tsx","pages/question/Edit/components/Left/LeftPanel.tsx","pages/question/Edit/components/Right/PropForm.tsx","pages/question/Edit/components/Right/PageSetting.tsx","pages/question/Edit/components/Right/RightPanel.tsx","webpack://react-questionnaire/./src/pages/question/Edit/components/Top/EditHeader.module.sass?cc38","hooks/useBindCanvasKeyPress.ts","pages/question/Edit/components/Top/EditToolbar.tsx","pages/question/Edit/components/Top/EditHeader.tsx","pages/question/Edit/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Edit_container__Tqkn8\",\"content-wrapper\":\"Edit_content-wrapper__z9jTk\",\"content\":\"Edit_content__04S-h\",\"left\":\"Edit_left__O0fnH\",\"main\":\"Edit_main__pg+Pv\",\"canvas-wrapper\":\"Edit_canvas-wrapper__HPY6j\",\"right\":\"Edit_right__Sagq7\"};","// extracted by mini-css-extract-plugin\nexport default {\"canvas\":\"EditCanvas_canvas__3Iiwc\",\"component-wrapper\":\"EditCanvas_component-wrapper__iX0Nj\",\"selected\":\"EditCanvas_selected__aWXC2\",\"locked\":\"EditCanvas_locked__HPMf7\",\"component\":\"EditCanvas_component__6Dh6W\"};","import React from 'react';\nimport { DndContext, DragEndEvent, MouseSensor, closestCenter, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\ntype Props = {\n    children: JSX.Element | JSX.Element[];\n    items: ({ id: string } & unknown)[];\n    onDragEnd: (oldIndex: number, newIndex: number) => void;\n};\n\nfunction dnd({ children, items, onDragEnd }: Props) {\n    const sensors = useSensors(\n        useSensor(MouseSensor, {\n            activationConstraint: {\n                distance: 8,\n            },\n        }),\n    );\n\n    function handleDragEnd(event: DragEndEvent) {\n        const { active, over } = event;\n        if (!over) return;\n\n        if (active.id !== over.id) {\n            const oldIndex = items.findIndex(c => c.id === active.id);\n            const newIndex = items.findIndex(c => c.id === over.id);\n            onDragEnd(oldIndex, newIndex);\n        }\n    }\n\n    return (\n        <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n            <SortableContext items={items} strategy={verticalListSortingStrategy}>\n                {children}\n            </SortableContext>\n        </DndContext>\n    );\n}\n\nexport default dnd;\n","import React from 'react';\nimport { CSS } from '@dnd-kit/utilities';\nimport { useSortable } from '@dnd-kit/sortable';\ntype Props = {\n    id: string;\n    children: JSX.Element;\n};\n\nconst SortableItem = ({ id, children }: Props) => {\n    const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n    };\n    return (\n        <div ref={setNodeRef} style={style} {...attributes} {...listeners} id={id}>\n            {children}\n        </div>\n    );\n};\n\nexport default SortableItem;\n","import React from 'react';\nimport { Empty, Spin } from 'antd';\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo';\nimport { componentConfList } from '@/components/QuestionComponents';\nimport { ComponentInfoType, changeSelectedId, moveComponent } from '@/store/componentsReducer';\nimport styles from './EditCanvas.module.sass';\nimport { useDispatch } from 'react-redux';\nimport classnames from 'classnames';\nimport SortableContainer from '@/components/DragSortable/SortableContainer';\nimport SortableItem from '@/components/DragSortable/SortableItem';\n\ntype PropsType = {\n    loading: boolean;\n};\n\nfunction findComponent(c: ComponentInfoType) {\n    const conf = componentConfList[c.type];\n    return conf ? <conf.Component {...c.props} /> : <Empty description='找不到组件' />;\n}\n\nconst EditCanvas = ({ loading }: PropsType) => {\n    const dispatch = useDispatch();\n    const { componentList, selectedId } = useGetComponentInfo();\n    if (loading)\n        return (\n            <div style={{ textAlign: 'center', marginTop: '24px' }}>\n                <Spin />\n            </div>\n        );\n\n    return (\n        <SortableContainer\n            items={componentList.map(c => ({ id: c.fe_id, ...c }))}\n            onDragEnd={(oldIndex, newIndex) => {\n                dispatch(moveComponent({ oldIndex, newIndex }));\n            }}\n        >\n            <div className={styles.canvas}>\n                {componentList\n                    .filter(c => !c.isHidden)\n                    .map(c => {\n                        const { fe_id, isLocked } = c;\n\n                        const wrapClass = classnames(styles['component-wrapper'], {\n                            [styles.selected]: fe_id === selectedId,\n                            [styles.locked]: isLocked,\n                        });\n\n                        return (\n                            <SortableItem id={fe_id} key={fe_id}>\n                                <div\n                                    className={wrapClass}\n                                    onClick={e => {\n                                        e.stopPropagation();\n                                        dispatch(changeSelectedId(fe_id));\n                                    }}\n                                >\n                                    <div className={styles.component}>{findComponent(c)}</div>\n                                </div>\n                            </SortableItem>\n                        );\n                    })}\n            </div>\n        </SortableContainer>\n    );\n};\n\nexport default EditCanvas;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"ComponentLib_wrap__eVdWL\",\"title\":\"ComponentLib_title__JmZzu\",\"componentWrap\":\"ComponentLib_componentWrap__gcw4v\",\"component\":\"ComponentLib_component__XQ6fN\"};","import React, { useCallback } from 'react';\nimport { ComponentConfType, componentConfGroup } from '@/components/QuestionComponents';\nimport { Typography } from 'antd';\nimport styles from './ComponentLib.module.sass';\nimport { useDispatch } from 'react-redux';\nimport { addComponent } from '@/store/componentsReducer';\nimport { nanoid } from 'nanoid';\nconst { Title } = Typography;\n\nconst ComponentLib = () => {\n    const dispatch = useDispatch();\n\n    const add = useCallback((c: ComponentConfType) => {\n        const { title, type, defaultProps } = c;\n\n        dispatch(\n            addComponent({\n                fe_id: nanoid(),\n                type,\n                title,\n                props: defaultProps,\n            }),\n        );\n    }, []);\n\n    return (\n        <>\n            {componentConfGroup.map(g => {\n                const { groupName, components } = g;\n                return (\n                    <div className={styles.wrap} key={groupName}>\n                        <Title className={styles.title} level={3}>\n                            {groupName}\n                        </Title>\n\n                        {components.map(c => {\n                            const { type, Component } = c;\n                            return (\n                                <div className={styles.componentWrap} key={type} onClick={() => add(c)}>\n                                    <div className={styles.component}>\n                                        <Component />\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                );\n            })}\n        </>\n    );\n};\n\nexport default ComponentLib;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Layers_wrapper__9fXtz\",\"title\":\"Layers_title__NKpg9\",\"selected\":\"Layers_selected__02vUL\",\"handler\":\"Layers_handler__IxcY7\",\"btn\":\"Layers_btn__EWtWa\"};","import useGetComponentInfo from '@/hooks/useGetComponentInfo';\nimport React, { ChangeEvent, useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './Layers.module.sass';\nimport { Button, Input, InputRef, Space, message } from 'antd';\nimport {\n    updateComponent,\n    changeSelectedId,\n    toggleComponentLocked,\n    changeComponentHidden,\n    moveComponent,\n} from '@/store/componentsReducer';\nimport classNames from 'classnames';\nimport { EyeInvisibleOutlined, LockOutlined } from '@ant-design/icons';\nimport SortableContainer from '@/components/DragSortable/SortableContainer';\nimport SortableItem from '@/components/DragSortable/SortableItem';\n\nconst Layers = () => {\n    const { componentList, selectedId } = useGetComponentInfo();\n    const dispatch = useDispatch();\n\n    const [changingTitleId, setChangingTitleId] = useState('');\n\n    const inputRef = useCallback((node: InputRef) => {\n        if (node !== null) {\n            node.focus();\n        }\n    }, []);\n\n    function handleTitleClick(fe_id: string) {\n        const currComp = componentList.find(c => c.fe_id === fe_id);\n        if (!currComp || currComp.isHidden) {\n            message.info('不能选中隐藏组件');\n            return;\n        }\n\n        if (fe_id === selectedId) {\n            // true -> 修改为 Input 允许输入\n            setChangingTitleId(fe_id);\n            // 修改后会 render Input， 从而挂载 Ref 从而触发 inputRef.focus()\n        } else {\n            // false -> 显示为文本\n            dispatch(changeSelectedId(fe_id));\n            setChangingTitleId('');\n        }\n    }\n\n    function updateTitle(fe_id: string, e: ChangeEvent<HTMLInputElement>) {\n        const t = e.target.value.trim();\n        if (!t) return;\n        dispatch(updateComponent({ fe_id, opt: { title: t } }));\n    }\n\n    return (\n        <SortableContainer\n            items={componentList.map(c => ({ id: c.fe_id, ...c }))}\n            onDragEnd={(oldIndex, newIndex) => dispatch(moveComponent({ oldIndex, newIndex }))}\n        >\n            {componentList.map(({ fe_id, title, isHidden, isLocked }) => {\n                const titleClassName = classNames(styles.title, {\n                    [styles.selected]: fe_id === selectedId,\n                });\n\n                return (\n                    <SortableItem key={fe_id} id={fe_id}>\n                        <div className={styles.wrapper}>\n                            <div className={titleClassName} onClick={() => handleTitleClick(fe_id)}>\n                                {changingTitleId === fe_id ? (\n                                    <Input\n                                        ref={inputRef}\n                                        value={title}\n                                        onChange={e => updateTitle(fe_id, e)}\n                                        onPressEnter={() => setChangingTitleId('')}\n                                        onBlur={() => setChangingTitleId('')}\n                                    />\n                                ) : (\n                                    title\n                                )}\n                            </div>\n                            <div className={styles.handler}>\n                                <Space>\n                                    <Button\n                                        className={!isHidden ? styles.btn : ''}\n                                        shape='circle'\n                                        size='small'\n                                        icon={<EyeInvisibleOutlined />}\n                                        type={isHidden ? 'primary' : 'text'}\n                                        onClick={() => dispatch(changeComponentHidden({ fe_id, isHidden: !isHidden }))}\n                                    />\n                                    <Button\n                                        className={!isLocked ? styles.btn : ''}\n                                        shape='circle'\n                                        size='small'\n                                        icon={<LockOutlined />}\n                                        type={isLocked ? 'primary' : 'text'}\n                                        onClick={() => dispatch(toggleComponentLocked({ fe_id }))}\n                                    />\n                                </Space>\n                            </div>\n                        </div>\n                    </SortableItem>\n                );\n            })}\n        </SortableContainer>\n    );\n};\n\nexport default Layers;\n","import React from 'react';\nimport { AppstoreOutlined, BarsOutlined } from '@ant-design/icons';\nimport { Tabs } from 'antd';\nimport ComponentLib from './ComponentLib';\nimport Layers from './Layers';\n\nconst LeftPanel = () => {\n    const tabsItems = [\n        {\n            key: 'componentLib',\n            label: (\n                <span>\n                    <AppstoreOutlined />\n                    组件库\n                </span>\n            ),\n            children: (\n                <div>\n                    <ComponentLib />\n                </div>\n            ),\n        },\n        {\n            key: 'layers',\n            label: (\n                <span>\n                    <BarsOutlined />\n                    图层\n                </span>\n            ),\n            children: <Layers />,\n        },\n    ];\n\n    return <Tabs items={tabsItems} defaultActiveKey='componentLib'></Tabs>;\n};\n\nexport default LeftPanel;\n","import React from 'react';\nimport { ComponentPropsType, componentConfList } from '@/components/QuestionComponents';\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo';\nimport { changeComponentProps } from '@/store/componentsReducer';\nimport { Empty } from 'antd';\nimport { useDispatch } from 'react-redux';\n\nconst NoProp = () => {\n    return <Empty description='未选中组件' />;\n};\n\nconst PropForm = () => {\n    const { selectedComponent, selectedId } = useGetComponentInfo();\n    const dispatch = useDispatch();\n    if (!selectedComponent) return <NoProp />;\n\n    const { type, props, isHidden, isLocked } = selectedComponent;\n\n    const componentConf = componentConfList[type];\n    if (!componentConf) return <NoProp />;\n\n    const { PropsForm } = componentConf;\n\n    function changeProps(newProps: ComponentPropsType) {\n        dispatch(changeComponentProps({ fe_id: selectedId, newProps }));\n    }\n    return <PropsForm {...props} onChange={changeProps} disabled={isHidden || isLocked} />;\n};\n\nexport default PropForm;\n","import React, { useEffect } from 'react';\nimport useGetQuestionPageInfo from '@/hooks/useGetQuestionPageInfo';\nimport { Form, Input } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { updatePageInfo } from '@/store/pageInfo';\n\nconst PageSetting = () => {\n    const pageInfo = useGetQuestionPageInfo();\n    const dispatch = useDispatch();\n    // const { title, desc, js, css } = pageInfo;\n\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        form.setFieldsValue(pageInfo);\n    }, [pageInfo]);\n\n    return (\n        <Form\n            layout='vertical'\n            initialValues={pageInfo}\n            onValuesChange={(_, allValues) => {\n                dispatch(updatePageInfo(allValues));\n            }}\n            form={form}\n        >\n            <Form.Item name='title' label='页面标题' rules={[{ required: true, message: '请输入页面标题' }]}>\n                <Input placeholder='请输入页面标题' />\n            </Form.Item>\n            <Form.Item name='desc' label='页面描述'>\n                <Input placeholder='请输入页面描述' />\n            </Form.Item>\n            <Form.Item name='js' label='页面代码'>\n                <Input.TextArea placeholder='请输入 JS 代码' />\n            </Form.Item>\n            <Form.Item name='css' label='页面样式'>\n                <Input.TextArea placeholder='请输入 CSS 代码' />\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default PageSetting;\n","import React from 'react';\nimport { FileTextOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Tabs } from 'antd';\nimport PropForm from './PropForm';\nimport PageSetting from './PageSetting';\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo';\n\nenum TAB_KEYS {\n    PROP = 'PROP',\n    SETTING = 'SETTING',\n}\n\nconst RightPanel = () => {\n    const { selectedId } = useGetComponentInfo();\n    const tableItems = [\n        {\n            key: TAB_KEYS.PROP,\n            label: (\n                <span>\n                    <FileTextOutlined />\n                    属性\n                </span>\n            ),\n            children: <PropForm />,\n        },\n        {\n            key: TAB_KEYS.SETTING,\n            label: (\n                <span>\n                    <SettingOutlined />\n                    页面设置\n                </span>\n            ),\n            children: <PageSetting />,\n        },\n    ];\n\n    return <Tabs items={tableItems} activeKey={selectedId ? TAB_KEYS.PROP : TAB_KEYS.SETTING}></Tabs>;\n};\n\nexport default RightPanel;\n","// extracted by mini-css-extract-plugin\nexport default {\"header-wrapper\":\"EditHeader_header-wrapper__SUXpv\",\"header\":\"EditHeader_header__sKMKE\",\"left\":\"EditHeader_left__gyoyh\",\"title\":\"EditHeader_title__nHvvq\",\"main\":\"EditHeader_main__NtJq3\",\"right\":\"EditHeader_right__ECftt\"};","import { useKeyPress } from 'ahooks';\nimport { useDispatch } from 'react-redux';\nimport {\n    copyComponent,\n    pasteCopiedComponent,\n    removeSelectedComponent,\n    moveSelectedComponent,\n} from '@/store/componentsReducer';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\n\nfunction isActiveElementValid() {\n    const activeElm = document.activeElement;\n    if (activeElm === document.body) return true;\n    // dnd-kit\n    if (activeElm?.matches('div[role=\"button\"]')) return true;\n\n    return false;\n}\n\nfunction useBindCanvasKeyPress() {\n    const dispatch = useDispatch();\n\n    useKeyPress(['backspace', 'delete'], () => {\n        if (!isActiveElementValid()) return;\n        dispatch(removeSelectedComponent());\n    });\n\n    useKeyPress(['ctrl.c', 'meta.c'], () => {\n        if (!isActiveElementValid()) return;\n        dispatch(copyComponent());\n    });\n\n    useKeyPress(['ctrl.v', 'meta.v'], () => {\n        if (!isActiveElementValid()) return;\n        dispatch(pasteCopiedComponent());\n    });\n\n    useKeyPress(['uparrow'], () => {\n        if (!isActiveElementValid()) return;\n        dispatch(moveSelectedComponent('up'));\n    });\n\n    useKeyPress(['downarrow'], () => {\n        if (!isActiveElementValid()) return;\n        dispatch(moveSelectedComponent('down'));\n    });\n\n    useKeyPress(\n        ['ctrl.z', 'meta.z'],\n        () => {\n            if (!isActiveElementValid()) return;\n            dispatch(UndoActionCreators.undo());\n        },\n        {\n            exactMatch: true,\n        },\n    );\n\n    useKeyPress(\n        ['ctrl.y', 'meta.y'],\n        () => {\n            if (!isActiveElementValid()) return;\n            dispatch(UndoActionCreators.redo());\n        },\n        {\n            exactMatch: true,\n        },\n    );\n}\n\nexport default useBindCanvasKeyPress;\n","import React from 'react';\nimport {\n    BlockOutlined,\n    CopyOutlined,\n    DeleteOutlined,\n    DownOutlined,\n    EyeInvisibleOutlined,\n    LockOutlined,\n    RedoOutlined,\n    UndoOutlined,\n    UpOutlined,\n} from '@ant-design/icons';\nimport { Button, Space, Tooltip } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport {\n    removeSelectedComponent,\n    changeComponentHidden,\n    toggleComponentLocked,\n    copyComponent,\n    pasteCopiedComponent,\n    moveComponent,\n} from '@/store/componentsReducer';\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo';\nimport useBindCanvasKeyPress from '@/hooks/useBindCanvasKeyPress';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\n\nconst EditToolbar = () => {\n    const dispatch = useDispatch();\n\n    const { selectedId, selectedComponent, copiedComponent, componentList } = useGetComponentInfo();\n\n    const { isLocked = false } = selectedComponent || {};\n\n    useBindCanvasKeyPress();\n\n    const length = componentList.length - 1;\n    const selectedIndex = componentList.findIndex(c => c.fe_id === selectedId);\n\n    const isFirst = selectedIndex <= 0;\n    const isLast = selectedIndex >= length;\n\n    return (\n        <Space>\n            <Tooltip title='删除'>\n                <Button\n                    shape='circle'\n                    icon={<DeleteOutlined />}\n                    onClick={() => dispatch(removeSelectedComponent({ fe_id: selectedId }))}\n                />\n            </Tooltip>\n            <Tooltip title='隐藏'>\n                <Button\n                    shape='circle'\n                    icon={<EyeInvisibleOutlined />}\n                    onClick={() => dispatch(changeComponentHidden({ fe_id: selectedId, isHidden: true }))}\n                />\n            </Tooltip>\n            <Tooltip title={isLocked ? '解锁' : '锁定'}>\n                <Button\n                    shape='circle'\n                    icon={<LockOutlined />}\n                    type={isLocked ? 'primary' : 'default'}\n                    onClick={() => dispatch(toggleComponentLocked({ fe_id: selectedId }))}\n                />\n            </Tooltip>\n            <Tooltip title='复制'>\n                <Button\n                    shape='circle'\n                    icon={<CopyOutlined />}\n                    onClick={() => dispatch(copyComponent({ fe_id: selectedId }))}\n                />\n            </Tooltip>\n            <Tooltip title='粘贴'>\n                <Button\n                    shape='circle'\n                    icon={<BlockOutlined />}\n                    disabled={!copiedComponent}\n                    onClick={() => dispatch(pasteCopiedComponent())}\n                />\n            </Tooltip>\n            <Tooltip title='上移'>\n                <Button\n                    shape='circle'\n                    icon={<UpOutlined />}\n                    disabled={isFirst}\n                    onClick={() => {\n                        if (isFirst) {\n                            return;\n                        }\n                        dispatch(moveComponent({ oldIndex: selectedIndex, newIndex: selectedIndex - 1 }));\n                    }}\n                />\n            </Tooltip>\n            <Tooltip title='下移'>\n                <Button\n                    shape='circle'\n                    icon={<DownOutlined />}\n                    disabled={isLast}\n                    onClick={() => {\n                        if (isLast) {\n                            return;\n                        }\n                        dispatch(moveComponent({ oldIndex: selectedIndex, newIndex: selectedIndex + 1 }));\n                    }}\n                />\n            </Tooltip>\n            <Tooltip title='撤销'>\n                <Button\n                    shape='circle'\n                    icon={<UndoOutlined />}\n                    onClick={() => {\n                        dispatch(UndoActionCreators.undo());\n                    }}\n                />\n            </Tooltip>\n            <Tooltip title='重做'>\n                <Button\n                    shape='circle'\n                    icon={<RedoOutlined />}\n                    onClick={() => {\n                        dispatch(UndoActionCreators.redo());\n                    }}\n                />\n            </Tooltip>\n        </Space>\n    );\n};\n\nexport default EditToolbar;\n","import React, { useMemo, useState } from 'react';\nimport styles from './EditHeader.module.sass';\nimport { Button, Input, Space, Typography, message } from 'antd';\nimport { EditOutlined, LeftOutlined } from '@ant-design/icons';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport EditToolbar from './EditToolbar';\nimport useGetQuestionPageInfo from '@/hooks/useGetQuestionPageInfo';\nimport { useDispatch } from 'react-redux';\nimport { updatePageInfo } from '@/store/pageInfo';\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo';\nimport { useDebounceEffect, useKeyPress, useRequest } from 'ahooks';\nimport { updateQuestionEditService, updateQuestionService } from '@/services/question';\nimport { QuestionEditData } from '@/types/question';\n\nconst { Title } = Typography;\n\nconst TitleElm = () => {\n    const { title } = useGetQuestionPageInfo();\n    const dispatch = useDispatch();\n\n    const [editState, setEditState] = useState(false);\n\n    return (\n        <Space align='baseline'>\n            {!editState ? (\n                <Title className={styles.title}>{title}</Title>\n            ) : (\n                <Input\n                    value={title}\n                    onChange={e => {\n                        const t = e.target.value.trim();\n                        if (!t) return;\n                        dispatch(updatePageInfo({ title: t }));\n                    }}\n                    onBlur={() => setEditState(false)}\n                    onPressEnter={() => setEditState(false)}\n                />\n            )}\n            <Button type='text' icon={<EditOutlined />} onClick={() => setEditState(true)}></Button>\n        </Space>\n    );\n};\n\nconst SaveButton = () => {\n    const { id } = useParams();\n    const { componentList } = useGetComponentInfo();\n    const pageInfo = useGetQuestionPageInfo();\n\n    const res = useMemo<QuestionEditData>(() => {\n        return {\n            ...pageInfo,\n            componentList,\n        };\n    }, [pageInfo, componentList]);\n\n    const { loading, run: save } = useRequest(\n        () => {\n            if (!id) return Promise.reject('没有ID');\n\n            return updateQuestionEditService(id, res);\n        },\n        { manual: true },\n    );\n\n    useKeyPress(['ctrl.s', 'meta.s'], (event: KeyboardEvent) => {\n        event.preventDefault();\n        if (loading) return;\n        save();\n    });\n\n    // 自动保存\n    useDebounceEffect(\n        () => {\n            save();\n        },\n        [pageInfo, componentList],\n        { wait: 30 * 1000 },\n    );\n\n    return (\n        <Button loading={loading} onClick={save}>\n            保存\n        </Button>\n    );\n};\n\nconst PublishButton = () => {\n    const { id } = useParams();\n    const nav = useNavigate();\n    const { loading, run } = useRequest(\n        () => {\n            if (!id) return Promise.reject('没有ID');\n            return updateQuestionService(id, { isPublished: true });\n        },\n        {\n            manual: true,\n            onSuccess() {\n                message.success('发布成功');\n                nav(`/question/stat/${id}`); // TODO check\n            },\n        },\n    );\n\n    return (\n        <Button loading={loading} onClick={run} type='primary'>\n            发布\n        </Button>\n    );\n};\n\nconst EditHeader = () => {\n    const nav = useNavigate();\n    return (\n        <div className={styles['header-wrapper']}>\n            <div className={styles.header}>\n                <div className={styles.left}>\n                    <Space align='baseline'>\n                        <Button\n                            type='link'\n                            icon={<LeftOutlined />}\n                            onClick={() => {\n                                nav(-1);\n                            }}\n                        >\n                            返回\n                        </Button>\n                        <TitleElm />\n                    </Space>\n                </div>\n                <div className={styles.main}>\n                    <EditToolbar />\n                </div>\n                <div className={styles.right}>\n                    <Space>\n                        <SaveButton />\n                        <PublishButton />\n                    </Space>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditHeader;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeSelectedId } from '@/store/componentsReducer';\nimport useLoadQuestionData from '../../../hooks/useLoadQuestionData';\n\nimport styles from './index.module.sass';\n\nimport EditCanvas from './components/Main/EditCanvas';\nimport LeftPanel from './components/Left/LeftPanel';\nimport RightPanel from './components/Right/RightPanel';\nimport EditHeader from './components/Top/EditHeader';\nimport { useTitle } from 'ahooks';\nimport useGetQuestionPageInfo from '@/hooks/useGetQuestionPageInfo';\n\nconst Edit = () => {\n    const { loading } = useLoadQuestionData();\n    const { title } = useGetQuestionPageInfo();\n    useTitle(title + '- 问卷编辑', { restoreOnUnmount: true });\n\n    const dispatch = useDispatch();\n\n    function clearSelectedId() {\n        dispatch(changeSelectedId(''));\n    }\n\n    return (\n        <div className={styles.container}>\n            <div>\n                <EditHeader />\n            </div>\n            <div className={styles['content-wrapper']}>\n                <div className={styles.content}>\n                    <div className={styles.left}>\n                        <LeftPanel />\n                    </div>\n                    <div className={styles.main} onClick={clearSelectedId}>\n                        <div className={styles['canvas-wrapper']}>\n                            <EditCanvas loading={loading} />\n                        </div>\n                    </div>\n                    <div className={styles.right}>\n                        <RightPanel />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Edit;\n"],"names":["_ref","children","items","onDragEnd","sensors","useSensors","useSensor","MouseSensor","activationConstraint","distance","_jsx","DndContext","collisionDetection","closestCenter","event","active","over","id","oldIndex","findIndex","c","newIndex","SortableContext","strategy","verticalListSortingStrategy","_useSortable","useSortable","attributes","listeners","setNodeRef","transform","transition","style","CSS","Transform","toString","_objectSpread","ref","findComponent","conf","componentConfList","type","Component","props","Empty","description","loading","dispatch","useDispatch","_useGetComponentInfo","useGetComponentInfo","componentList","selectedId","textAlign","marginTop","Spin","SortableContainer","map","fe_id","moveComponent","className","styles","filter","isHidden","_classnames","isLocked","wrapClass","classnames","_defineProperty","SortableItem","onClick","e","stopPropagation","changeSelectedId","Title","Typography","add","useCallback","title","defaultProps","addComponent","nanoid","_Fragment","componentConfGroup","g","groupName","components","_jsxs","level","_useState","useState","_useState2","_slicedToArray","changingTitleId","setChangingTitleId","inputRef","node","focus","titleClassName","classNames","currComp","find","message","info","handleTitleClick","Input","value","onChange","t","target","trim","updateComponent","opt","updateTitle","onPressEnter","onBlur","Space","Button","shape","size","icon","EyeInvisibleOutlined","changeComponentHidden","LockOutlined","toggleComponentLocked","tabsItems","key","label","AppstoreOutlined","ComponentLib","BarsOutlined","Layers","Tabs","defaultActiveKey","NoProp","selectedComponent","componentConf","PropsForm","newProps","changeComponentProps","disabled","pageInfo","useGetQuestionPageInfo","_Form$useForm","Form","useForm","form","useEffect","setFieldsValue","layout","initialValues","onValuesChange","_","allValues","updatePageInfo","Item","name","rules","required","placeholder","TextArea","TAB_KEYS","tableItems","PROP","FileTextOutlined","PropForm","SETTING","SettingOutlined","PageSetting","activeKey","isActiveElementValid","activeElm","document","activeElement","body","matches","useKeyPress","removeSelectedComponent","copyComponent","pasteCopiedComponent","moveSelectedComponent","UndoActionCreators","undo","exactMatch","redo","copiedComponent","_ref$isLocked","useBindCanvasKeyPress","length","selectedIndex","isFirst","isLast","Tooltip","DeleteOutlined","CopyOutlined","BlockOutlined","UpOutlined","DownOutlined","UndoOutlined","RedoOutlined","TitleElm","editState","setEditState","align","EditOutlined","SaveButton","useParams","res","useMemo","_useRequest","useRequest","updateQuestionEditService","Promise","reject","manual","save","run","preventDefault","useDebounceEffect","wait","PublishButton","nav","useNavigate","_useRequest2","updateQuestionService","isPublished","onSuccess","success","concat","LeftOutlined","EditToolbar","useLoadQuestionData","useTitle","restoreOnUnmount","EditHeader","LeftPanel","EditCanvas","RightPanel"],"sourceRoot":""}