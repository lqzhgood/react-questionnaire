{"version":3,"file":"static/js/388.04d913e1.chunk.js","mappings":"oPAUA,EAPoB,WAChB,IAAMA,GAAQC,EAAAA,EAAAA,YAAWC,GAEnBC,EAAS,CAAEC,MAAOJ,EAAMK,KAAMC,WAAYN,EAAMM,YACtD,OAAOC,EAAAA,EAAAA,KAAA,UAAQC,MAAOL,EAAOM,SAAC,eAClC,ECIA,EATgB,WACZ,OACIC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,aACHF,EAAAA,EAAAA,KAACI,EAAW,MAGxB,ECPMC,EACK,CACHP,KAAM,OACNC,WAAY,QAHdM,EAKI,CACFP,KAAM,OACNC,WAAY,QAIPJ,GAAeW,EAAAA,EAAAA,eAAcD,GAwB1C,EAtBgB,WACZ,IAAAE,GAA0BC,EAAAA,EAAAA,UAASH,GAAaI,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCd,EAAKgB,EAAA,GAAEE,EAAQF,EAAA,GAStB,OACIN,EAAAA,EAAAA,MAACR,EAAaiB,SAAQ,CAACC,MAAOpB,EAAMS,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBACNF,EAAAA,EAAAA,KAAA,UAAQc,QAXpB,WACIH,EAASN,EACb,EASqCH,SAAC,WAC1BF,EAAAA,EAAAA,KAAA,UAAQc,QATpB,WACIH,EAASN,EACb,EAOoCH,SAAC,aAE7BF,EAAAA,EAAAA,KAACe,EAAO,MAGpB,C","sources":["demos/pages/Base/Context/ThemeButton.tsx","demos/pages/Base/Context/Toolbar.tsx","demos/pages/Base/Context/index.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { ThemeContext } from './index';\n\nconst ThemeButton = () => {\n    const theme = useContext(ThemeContext);\n\n    const styles = { color: theme.fore, background: theme.background };\n    return <button style={styles}>ThemeButton</button>;\n};\n\nexport default ThemeButton;\n","import React from 'react';\nimport ThemeButton from './ThemeButton';\n\nconst Toolbar = () => {\n    return (\n        <div>\n            <p>Toolbar</p>\n            <ThemeButton />\n        </div>\n    );\n};\n\nexport default Toolbar;\n","import React, { createContext, useState } from 'react';\nimport Toolbar from './Toolbar';\n\nconst themes = {\n    light: {\n        fore: '#000',\n        background: '#eee',\n    },\n    dark: {\n        fore: '#fff',\n        background: '#222',\n    },\n};\n\nexport const ThemeContext = createContext(themes.light);\n\nconst Context = () => {\n    const [theme, setTheme] = useState(themes.light);\n\n    function toLight() {\n        setTheme(themes.light);\n    }\n    function toDark() {\n        setTheme(themes.dark);\n    }\n\n    return (\n        <ThemeContext.Provider value={theme}>\n            <div>\n                <span>Context Demo</span>\n                <button onClick={toLight}>light</button>\n                <button onClick={toDark}>dark</button>\n            </div>\n            <Toolbar />\n        </ThemeContext.Provider>\n    );\n};\n\nexport default Context;\n"],"names":["theme","useContext","ThemeContext","styles","color","fore","background","_jsx","style","children","_jsxs","ThemeButton","themes","createContext","_useState","useState","_useState2","_slicedToArray","setTheme","Provider","value","onClick","Toolbar"],"sourceRoot":""}