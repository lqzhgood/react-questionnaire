{"version":3,"file":"static/js/746.66d71e29.chunk.js","mappings":"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","sources":["webpack://react-questionnaire/./src/demos/pages/Official/FilterableProductTable/index.module.css?12fc","demos/pages/Official/FilterableProductTable/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FilterableProductTable_container__2JPxg\"};","import React, { useState } from 'react';\nimport styles from './index.module.css';\n\ntype Product = { category: string; price: string; stocked: boolean; name: string };\n\nconst PRODUCTS = [\n    { category: 'Fruits', price: '$1', stocked: true, name: 'Apple' },\n    { category: 'Fruits', price: '$1', stocked: true, name: 'Dragonfruit' },\n    { category: 'Fruits', price: '$2', stocked: false, name: 'Passionfruit' },\n    { category: 'Vegetables', price: '$2', stocked: true, name: 'Spinach' },\n    { category: 'Vegetables', price: '$4', stocked: false, name: 'Pumpkin' },\n    { category: 'Vegetables', price: '$1', stocked: true, name: 'Peas' },\n];\n\nfunction Form({\n    filterText,\n    inStockOnly,\n    setFilterText,\n    setInStockOnly,\n}: {\n    filterText: string;\n    inStockOnly: boolean;\n    setFilterText: (v: string) => void;\n    setInStockOnly: (v: boolean) => void;\n}) {\n    return (\n        <form>\n            <input\n                type='text'\n                placeholder='Search...'\n                value={filterText}\n                onChange={e => setFilterText(e.target.value.toLowerCase().trim())}\n            />\n            <br />\n            <label htmlFor='hasStock'>\n                <input\n                    type='checkbox'\n                    id='hasStock'\n                    checked={inStockOnly}\n                    onChange={e => setInStockOnly(e.target.checked)}\n                />\n                Only show products in stock\n            </label>\n        </form>\n    );\n}\n\nfunction RowCateGory({ category }: { category: string }) {\n    return (\n        <tr>\n            <th colSpan={2}>{category}</th>\n        </tr>\n    );\n}\n\nfunction Row({ product }: { product: Product }) {\n    return (\n        <tr>\n            <td style={{ color: product.stocked ? undefined : 'red' }}>{product.name}</td>\n            <td>{product.price}</td>\n        </tr>\n    );\n}\n\nfunction Table({ list, filterText, inStockOnly }: { list: Product[]; filterText: string; inStockOnly: boolean }) {\n    const rows: JSX.Element[] = [];\n    let lastCategory: string | null = null;\n\n    list.forEach(p => {\n        if (filterText && !p.name.toLowerCase().includes(filterText)) return;\n        if (inStockOnly && !p.stocked) return;\n        if (p.category !== lastCategory) {\n            rows.push(<RowCateGory category={p.category} key={p.category} />);\n            lastCategory = p.category;\n        }\n\n        rows.push(<Row product={p} key={p.name} />);\n    });\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Price</th>\n                </tr>\n            </thead>\n            <tbody>{rows}</tbody>\n        </table>\n    );\n}\n\nconst FilterableProductTable = () => {\n    const [filterText, setFilterText] = useState('');\n    const [inStockOnly, setInStockOnly] = useState(false);\n\n    return (\n        <div className={styles.container}>\n            <Form\n                filterText={filterText}\n                inStockOnly={inStockOnly}\n                setFilterText={setFilterText}\n                setInStockOnly={setInStockOnly}\n            />\n            <Table list={PRODUCTS} filterText={filterText} inStockOnly={inStockOnly} />\n        </div>\n    );\n};\n\nexport default FilterableProductTable;\n"],"names":["PRODUCTS","category","price","stocked","name","Form","_ref","filterText","inStockOnly","setFilterText","setInStockOnly","_jsxs","children","_jsx","type","placeholder","value","onChange","e","target","toLowerCase","trim","htmlFor","id","checked","RowCateGory","_ref2","colSpan","Row","_ref3","product","style","color","undefined","Table","_ref4","list","rows","lastCategory","forEach","p","includes","push","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","className","styles"],"sourceRoot":""}