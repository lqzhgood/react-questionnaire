{"version":3,"file":"static/js/799.5492dd25.chunk.js","mappings":"4KA2BA,UAzBqB,WAEjB,IAAAA,GAA0BC,EAAAA,EAAAA,aACtB,SAACC,EAA0BC,GACvB,OAAQA,EAAOC,MACX,IAAK,IACD,MAAO,CAAEC,MAAOH,EAAMG,MAAQ,GAClC,IAAK,IACD,MAAO,CAAEA,MAAOH,EAAMG,MAAQ,GAClC,QACI,MAAM,IAAIC,MAEtB,GACA,CAAED,MAAO,MACZE,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GAZME,EAAKK,EAAA,GAAEE,EAAQF,EAAA,GActB,OACIG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,UAAQT,EAAMG,UACpBO,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMJ,EAAS,CAAEL,KAAM,KAAM,EAACO,SAAC,OAChDC,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMJ,EAAS,CAAEL,KAAM,KAAM,EAACO,SAAC,QAG5D,C","sources":["demos/pages/CountReducer.tsx"],"sourcesContent":["import React, { useReducer } from 'react';\n\nconst CountReducer = () => {\n    // const [count, setCount] = useState(100);\n    const [state, dispatch] = useReducer(\n        (state: { count: number }, action: { type: string }) => {\n            switch (action.type) {\n                case '+':\n                    return { count: state.count + 1 };\n                case '-':\n                    return { count: state.count - 1 };\n                default:\n                    throw new Error();\n            }\n        },\n        { count: 100 },\n    );\n\n    return (\n        <div>\n            <span>count: {state.count}</span>\n            <button onClick={() => dispatch({ type: '+' })}>+</button>\n            <button onClick={() => dispatch({ type: '-' })}>-</button>\n        </div>\n    );\n};\n\nexport default CountReducer;\n"],"names":["_useReducer","useReducer","state","action","type","count","Error","_useReducer2","_slicedToArray","dispatch","_jsxs","children","_jsx","onClick"],"sourceRoot":""}