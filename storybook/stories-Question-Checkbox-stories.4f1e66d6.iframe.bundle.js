"use strict";(self.webpackChunkreact_questionnaire=self.webpackChunkreact_questionnaire||[]).push([[498],{"./src/stories/Question/Checkbox.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Checkbox_stories}});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),QuestionCheckboxDefaultProps={title:"多选标题",isVertical:!1,list:[{value:"v1",label:"选项1",checked:!1},{value:"v2",label:"选项2",checked:!1},{value:"v3",label:"选项3",checked:!1}]},typography=__webpack_require__("./node_modules/antd/es/typography/index.js"),space=__webpack_require__("./node_modules/antd/es/space/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),es=__webpack_require__("./node_modules/rc-checkbox/es/index.js"),wave=__webpack_require__("./node_modules/antd/es/_util/wave/index.js"),wave_interface=__webpack_require__("./node_modules/antd/es/_util/wave/interface.js"),config_provider_context=__webpack_require__("./node_modules/antd/es/config-provider/context.js"),DisabledContext=__webpack_require__("./node_modules/antd/es/config-provider/DisabledContext.js"),context=__webpack_require__("./node_modules/antd/es/form/context.js");var checkbox_GroupContext=react.createContext(null),style=__webpack_require__("./node_modules/antd/es/style/index.js"),statistic=__webpack_require__("./node_modules/antd/es/theme/util/statistic.js"),genComponentStyleHook=__webpack_require__("./node_modules/antd/es/theme/util/genComponentStyleHook.js");const genCheckboxStyle=token=>{const{checkboxCls:checkboxCls}=token,wrapperCls=`${checkboxCls}-wrapper`;return[{[`${checkboxCls}-group`]:Object.assign(Object.assign({},(0,style.Wf)(token)),{display:"inline-flex",flexWrap:"wrap",columnGap:token.marginXS,[`> ${token.antCls}-row`]:{flex:1}}),[wrapperCls]:Object.assign(Object.assign({},(0,style.Wf)(token)),{display:"inline-flex",alignItems:"baseline",cursor:"pointer","&:after":{display:"inline-block",width:0,overflow:"hidden",content:"'\\a0'"},[`& + ${wrapperCls}`]:{marginInlineStart:0},[`&${wrapperCls}-in-form-item`]:{'input[type="checkbox"]':{width:14,height:14}}}),[checkboxCls]:Object.assign(Object.assign({},(0,style.Wf)(token)),{position:"relative",whiteSpace:"nowrap",lineHeight:1,cursor:"pointer",borderRadius:token.borderRadiusSM,alignSelf:"center",[`${checkboxCls}-input`]:{position:"absolute",inset:0,zIndex:1,cursor:"pointer",opacity:0,margin:0,[`&:focus-visible + ${checkboxCls}-inner`]:Object.assign({},(0,style.oN)(token))},[`${checkboxCls}-inner`]:{boxSizing:"border-box",position:"relative",top:0,insetInlineStart:0,display:"block",width:token.checkboxSize,height:token.checkboxSize,direction:"ltr",backgroundColor:token.colorBgContainer,border:`${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,borderRadius:token.borderRadiusSM,borderCollapse:"separate",transition:`all ${token.motionDurationSlow}`,"&:after":{boxSizing:"border-box",position:"absolute",top:"50%",insetInlineStart:"21.5%",display:"table",width:token.checkboxSize/14*5,height:token.checkboxSize/14*8,border:`${token.lineWidthBold}px solid ${token.colorWhite}`,borderTop:0,borderInlineStart:0,transform:"rotate(45deg) scale(0) translate(-50%,-50%)",opacity:0,content:'""',transition:`all ${token.motionDurationFast} ${token.motionEaseInBack}, opacity ${token.motionDurationFast}`}},"& + span":{paddingInlineStart:token.paddingXS,paddingInlineEnd:token.paddingXS}})},{[`\n        ${wrapperCls}:not(${wrapperCls}-disabled),\n        ${checkboxCls}:not(${checkboxCls}-disabled)\n      `]:{[`&:hover ${checkboxCls}-inner`]:{borderColor:token.colorPrimary}},[`${wrapperCls}:not(${wrapperCls}-disabled)`]:{[`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled) ${checkboxCls}-inner`]:{backgroundColor:token.colorPrimaryHover,borderColor:"transparent"},[`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled):after`]:{borderColor:token.colorPrimaryHover}}},{[`${checkboxCls}-checked`]:{[`${checkboxCls}-inner`]:{backgroundColor:token.colorPrimary,borderColor:token.colorPrimary,"&:after":{opacity:1,transform:"rotate(45deg) scale(1) translate(-50%,-50%)",transition:`all ${token.motionDurationMid} ${token.motionEaseOutBack} ${token.motionDurationFast}`}}},[`\n        ${wrapperCls}-checked:not(${wrapperCls}-disabled),\n        ${checkboxCls}-checked:not(${checkboxCls}-disabled)\n      `]:{[`&:hover ${checkboxCls}-inner`]:{backgroundColor:token.colorPrimaryHover,borderColor:"transparent"}}},{[checkboxCls]:{"&-indeterminate":{[`${checkboxCls}-inner`]:{backgroundColor:token.colorBgContainer,borderColor:token.colorBorder,"&:after":{top:"50%",insetInlineStart:"50%",width:token.fontSizeLG/2,height:token.fontSizeLG/2,backgroundColor:token.colorPrimary,border:0,transform:"translate(-50%, -50%) scale(1)",opacity:1,content:'""'}}}}},{[`${wrapperCls}-disabled`]:{cursor:"not-allowed"},[`${checkboxCls}-disabled`]:{[`&, ${checkboxCls}-input`]:{cursor:"not-allowed",pointerEvents:"none"},[`${checkboxCls}-inner`]:{background:token.colorBgContainerDisabled,borderColor:token.colorBorder,"&:after":{borderColor:token.colorTextDisabled}},"&:after":{display:"none"},"& + span":{color:token.colorTextDisabled},[`&${checkboxCls}-indeterminate ${checkboxCls}-inner::after`]:{background:token.colorTextDisabled}}}]};function getStyle(prefixCls,token){const checkboxToken=(0,statistic.TS)(token,{checkboxCls:`.${prefixCls}`,checkboxSize:token.controlInteractiveSize});return[genCheckboxStyle(checkboxToken)]}var checkbox_style=(0,genComponentStyleHook.Z)("Checkbox",((token,_ref)=>{let{prefixCls:prefixCls}=_ref;return[getStyle(prefixCls,token)]})),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const InternalCheckbox=(props,ref)=>{var _a;const{prefixCls:customizePrefixCls,className:className,rootClassName:rootClassName,children:children,indeterminate:indeterminate=!1,style:style,onMouseEnter:onMouseEnter,onMouseLeave:onMouseLeave,skipGroup:skipGroup=!1,disabled:disabled}=props,restProps=__rest(props,["prefixCls","className","rootClassName","children","indeterminate","style","onMouseEnter","onMouseLeave","skipGroup","disabled"]),{getPrefixCls:getPrefixCls,direction:direction,checkbox:checkbox}=react.useContext(config_provider_context.E_),checkboxGroup=react.useContext(checkbox_GroupContext),{isFormItemInput:isFormItemInput}=react.useContext(context.aM),contextDisabled=react.useContext(DisabledContext.Z),mergedDisabled=null!==(_a=(null==checkboxGroup?void 0:checkboxGroup.disabled)||disabled)&&void 0!==_a?_a:contextDisabled,prevValue=react.useRef(restProps.value);react.useEffect((()=>{null==checkboxGroup||checkboxGroup.registerValue(restProps.value)}),[]),react.useEffect((()=>{if(!skipGroup)return restProps.value!==prevValue.current&&(null==checkboxGroup||checkboxGroup.cancelValue(prevValue.current),null==checkboxGroup||checkboxGroup.registerValue(restProps.value),prevValue.current=restProps.value),()=>null==checkboxGroup?void 0:checkboxGroup.cancelValue(restProps.value)}),[restProps.value]);const prefixCls=getPrefixCls("checkbox",customizePrefixCls),[wrapSSR,hashId]=checkbox_style(prefixCls),checkboxProps=Object.assign({},restProps);checkboxGroup&&!skipGroup&&(checkboxProps.onChange=function(){restProps.onChange&&restProps.onChange.apply(restProps,arguments),checkboxGroup.toggleOption&&checkboxGroup.toggleOption({label:children,value:restProps.value})},checkboxProps.name=checkboxGroup.name,checkboxProps.checked=checkboxGroup.value.includes(restProps.value));const classString=classnames_default()(`${prefixCls}-wrapper`,{[`${prefixCls}-rtl`]:"rtl"===direction,[`${prefixCls}-wrapper-checked`]:checkboxProps.checked,[`${prefixCls}-wrapper-disabled`]:mergedDisabled,[`${prefixCls}-wrapper-in-form-item`]:isFormItemInput},null==checkbox?void 0:checkbox.className,className,rootClassName,hashId),checkboxClass=classnames_default()({[`${prefixCls}-indeterminate`]:indeterminate},wave_interface.A,hashId),ariaChecked=indeterminate?"mixed":void 0;return wrapSSR(react.createElement(wave.Z,{component:"Checkbox",disabled:mergedDisabled},react.createElement("label",{className:classString,style:Object.assign(Object.assign({},null==checkbox?void 0:checkbox.style),style),onMouseEnter:onMouseEnter,onMouseLeave:onMouseLeave},react.createElement(es.Z,Object.assign({"aria-checked":ariaChecked},checkboxProps,{prefixCls:prefixCls,className:checkboxClass,disabled:mergedDisabled,ref:ref})),void 0!==children&&react.createElement("span",null,children))))};var checkbox_Checkbox=react.forwardRef(InternalCheckbox),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),omit=__webpack_require__("./node_modules/rc-util/es/omit.js"),Group_rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const InternalGroup=(props,ref)=>{const{defaultValue:defaultValue,children:children,options:options=[],prefixCls:customizePrefixCls,className:className,rootClassName:rootClassName,style:style,onChange:onChange}=props,restProps=Group_rest(props,["defaultValue","children","options","prefixCls","className","rootClassName","style","onChange"]),{getPrefixCls:getPrefixCls,direction:direction}=react.useContext(config_provider_context.E_),[value,setValue]=react.useState(restProps.value||defaultValue||[]),[registeredValues,setRegisteredValues]=react.useState([]);react.useEffect((()=>{"value"in restProps&&setValue(restProps.value||[])}),[restProps.value]);const memoOptions=react.useMemo((()=>options.map((option=>"string"==typeof option||"number"==typeof option?{label:option,value:option}:option))),[options]),prefixCls=getPrefixCls("checkbox",customizePrefixCls),groupPrefixCls=`${prefixCls}-group`,[wrapSSR,hashId]=checkbox_style(prefixCls),domProps=(0,omit.Z)(restProps,["value","disabled"]),childrenNode=options.length?memoOptions.map((option=>react.createElement(checkbox_Checkbox,{prefixCls:prefixCls,key:option.value.toString(),disabled:"disabled"in option?option.disabled:restProps.disabled,value:option.value,checked:value.includes(option.value),onChange:option.onChange,className:`${groupPrefixCls}-item`,style:option.style,title:option.title,id:option.id},option.label))):children,context={toggleOption:option=>{const optionIndex=value.indexOf(option.value),newValue=(0,toConsumableArray.Z)(value);-1===optionIndex?newValue.push(option.value):newValue.splice(optionIndex,1),"value"in restProps||setValue(newValue),null==onChange||onChange(newValue.filter((val=>registeredValues.includes(val))).sort(((a,b)=>memoOptions.findIndex((opt=>opt.value===a))-memoOptions.findIndex((opt=>opt.value===b)))))},value:value,disabled:restProps.disabled,name:restProps.name,registerValue:val=>{setRegisteredValues((prevValues=>[].concat((0,toConsumableArray.Z)(prevValues),[val])))},cancelValue:val=>{setRegisteredValues((prevValues=>prevValues.filter((v=>v!==val))))}},classString=classnames_default()(groupPrefixCls,{[`${groupPrefixCls}-rtl`]:"rtl"===direction},className,rootClassName,hashId);return wrapSSR(react.createElement("div",Object.assign({className:classString,style:style},domProps,{ref:ref}),react.createElement(checkbox_GroupContext.Provider,{value:context},childrenNode)))},CheckboxGroup=react.forwardRef(InternalGroup);var Group=react.memo(CheckboxGroup);const es_checkbox_Checkbox=checkbox_Checkbox;es_checkbox_Checkbox.Group=Group,es_checkbox_Checkbox.__ANT_CHECKBOX=!0;var _Default$parameters,_Default$parameters2,_Default$parameters2$,es_checkbox=es_checkbox_Checkbox,jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Paragraph=typography.Z.Paragraph,QuestionCheckbox=function QuestionCheckbox(props){var _QuestionCheckboxDefa=(0,objectSpread2.Z)((0,objectSpread2.Z)({},QuestionCheckboxDefaultProps),props),_QuestionCheckboxDefa2=_QuestionCheckboxDefa.title,title=void 0===_QuestionCheckboxDefa2?"":_QuestionCheckboxDefa2,_QuestionCheckboxDefa3=_QuestionCheckboxDefa.isVertical,isVertical=void 0!==_QuestionCheckboxDefa3&&_QuestionCheckboxDefa3,_QuestionCheckboxDefa4=_QuestionCheckboxDefa.list,list=void 0===_QuestionCheckboxDefa4?[]:_QuestionCheckboxDefa4;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Paragraph,{strong:!0,children:title}),(0,jsx_runtime.jsx)(space.Z,{direction:isVertical?"vertical":"horizontal",children:list.map((function(_ref){var value=_ref.value,label=_ref.label,checked=_ref.checked;return(0,jsx_runtime.jsx)(es_checkbox,{value:value,checked:checked,children:label},value)}))})]})};try{QuestionCheckbox.displayName="QuestionCheckbox",QuestionCheckbox.__docgenInfo={description:"",displayName:"QuestionCheckbox",props:{title:{defaultValue:{value:"多选标题"},description:"标题",name:"title",required:!1,type:{name:"string"}},isVertical:{defaultValue:{value:"false"},description:"是否垂直显示",name:"isVertical",required:!1,type:{name:"boolean"}},list:{defaultValue:null,description:"选项列表",name:"list",required:!1,type:{name:"{ value: string; label: string; checked: boolean; }[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((newProps: QuestionInputPropsType) => void)"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/QuestionComponents/QuestionCheckbox/Component.tsx#QuestionCheckbox"]={docgenInfo:QuestionCheckbox.__docgenInfo,name:"QuestionCheckbox",path:"src/components/QuestionComponents/QuestionCheckbox/Component.tsx#QuestionCheckbox"})}catch(__react_docgen_typescript_loader_error){}try{Component.displayName="Component",Component.__docgenInfo={description:"",displayName:"Component",props:{title:{defaultValue:{value:"多选标题"},description:"标题",name:"title",required:!1,type:{name:"string"}},isVertical:{defaultValue:{value:"false"},description:"是否垂直显示",name:"isVertical",required:!1,type:{name:"boolean"}},list:{defaultValue:null,description:"选项列表",name:"list",required:!1,type:{name:"{ value: string; label: string; checked: boolean; }[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((newProps: QuestionInputPropsType) => void)"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/QuestionComponents/QuestionCheckbox/Component.tsx#Component"]={docgenInfo:Component.__docgenInfo,name:"Component",path:"src/components/QuestionComponents/QuestionCheckbox/Component.tsx#Component"})}catch(__react_docgen_typescript_loader_error){}var Checkbox_stories={title:"Question/Checkbox",component:QuestionCheckbox,tags:["autodocs"],parameters:{layout:"centered"}},Default={args:(0,objectSpread2.Z)({},QuestionCheckboxDefaultProps)};Default.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Default.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  args: {\n    ...QuestionCheckboxDefaultProps\n  }\n}"},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source)})});var __namedExportsOrder=["Default"]}}]);